#include <iostream>
#include <vector>
using namespace std;

int birthday(const vector<int>& s, int d, int m) {
    int n = s.size();
    int count = 0;

    // If the length of the array is less than m, return 0
    if (n < m) {
        return 0;
    }

    // Initial sum of the first window
    int current_sum = 0;
    for (int i = 0; i < m; ++i) {
        current_sum += s[i];
    }

    // Check the first window
    if (current_sum == d) {
        count++;
    }

    // Slide the window and update the sum
    for (int i = m; i < n; ++i) {
        current_sum = current_sum - s[i - m] + s[i];
        if (current_sum == d) {
            count++;
        }
    }

    return count;
}

int main() {
    // Example 1
    vector<int> s1 = {1, 2, 1, 3, 2};
    int d1 = 3, m1 = 2;
    cout << birthday(s1, d1, m1) << endl;  // Output: 2

    // Example 2
    vector<int> s2 = {1, 1, 1, 1, 1, 1};
    int d2 = 3, m2 = 2;
    cout << birthday(s2, d2, m2) << endl;  // Output: 0

    // Example 3
    vector<int> s3 = {4};
    int d3 = 4, m3 = 1;
    cout << birthday(s3, d3, m3) << endl;  // Output: 1

    return 0;
}
